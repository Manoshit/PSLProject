@model Auth.ViewModels.AdminPizzaView

@{
    ViewBag.Title = "Index";
}

<h2>Your Pizzas</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<div class="row row-cols-1 row-cols-md-3 g-3">
    @foreach(var item in Model.pizzas)
    {
    <div class="col my-4">

        <div class="card h-100">
            <img class="card-img-top" src="@item.imageUrl" alt="Bologna">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-10"><h4 class="card-title">@item.name</h4></div>
                    <div class="col-md-2">
                        @if (item.category == "Veg")
                        {
                            <img width="20" src="https://upload.wikimedia.org/wikipedia/commons/7/78/Indian-vegetarian-mark.svg" />

                        }
                        else
                        {
                            <img width="20" src="https://img.icons8.com/fluent/17/000000/non-vegetarian-food-symbol.png" />
                        }
                    </div>
                </div>
                <p class="card-text">@item.description </p>
                <hr />
                <div class="row">
                    <div class="col-md-12">
                        <div><p class="card-text">Available in </p></div>
                    </div>

                </div>
                @foreach (var size in Model.sizes)
                {
                    if (item.id == size.pizzaId)
                    {
                        <div class="row">
                            <div class="col-md-12">
                                <p class="card-text"> @char.ToUpper(size.name[0])@size.name.Substring(1) - Rs @size.price</p>
                            </div>
                        </div>
                    }
                }
            </div>
            <div class="card-footer bg-transparent">
                <div class="row">
                    <div class="col-md-6">
                        @Html.ActionLink("Edit", "Edit", "Admin", new { id = item.id }, new { @class = "btn btn-block btn-outline-secondary" })
                    </div>
                    @{
                        var quantity = Model.pizzaStocks.Where((ps) => ps.pizzaId == item.id).FirstOrDefault();
                    }
                    @if (quantity.quantity != 0)
                    {
                        <div class="col-md-6 d-flex justify-content-end">
                            <a href="#" id="@item.id" class="btn  btn-outline-danger btn-block" data-toggle="modal" data-target="#smallModal"> Out Of Stock</a>
                        </div>
                    }
                    else
                    {
                        <div class="col-md-6 d-flex justify-content-end">
                            <a href="#"  class="btn  btn-outline-danger btn-block disabled"> Out Of Stock</a>
                        </div>
                    }
                </div>


            </div>
        </div>

        <div class="modal fade" id="smallModal" tabindex="-1" role="dialog" aria-labelledby="basicModal" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-md">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title" id="myModalLabel">Mark As Out Of Stock</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <h3>Are you sure</h3>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                        <button type="button" id="Delete"  class="btn btn-danger">Proceed</button>
                    </div>
                </div>
            </div>
        </div>

    </div>
    }

</div>
<script>
  
    $('#smallModal').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget) 
        var quantity = new Object();
        quantity.value = 0;
        console.log(button.attr("id"));
        document.getElementById("Delete").addEventListener("click", function () {

            $.ajax({
                url: 'https://localhost:44355/api/inventory' + "/" + button.attr("id"),
                type: 'PUT',
                dataType: 'json',
                data:quantity,
                success: function (result) {
                    
                },
                complete: function (result) {
                    console.log(result.responseText);
                 $('#smallModal').modal('hide');

                     document.location.reload();
                   
                }
            })
        

        });
    })
</script>